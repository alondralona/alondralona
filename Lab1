
/***********************************************************/
/* Assignment  :  Lab 01                                   */
/* File :  lonaL01.cpp                                     */
/* Author : Alondra Lona                                   */
/* Date : Spring 2018                                      */
/* Description : This program will write the words         */ 
/* "Hello World" on the standard console output screen.    */
/***********************************************************/

// Include input and output stream and string libraries.
#include <iostream>
#include <string>
#include <cmath>
// Use the standard namespace.
// This will allow the program to write to cout and read from cin.
using namespace std;

// Prototyoe for function to ask the user for their name.
string GetName (ostream & out, istream & ins0);
// Prototype for function to print the message.
void PrintMessage (string message, ostream & outs);

int main ()
{
  // Declare a string variable to hodl the user's name. 
  // Call the GetName function to get the user's name.
  // store the returned value in usersname.
  string usersname = GetName (cout, cin);
  // Create the messafe by concatenating hello and the user's
  // name.
  string mymessage ="Hello " + usersname;
  // Call the PrintMessage function to print the message.
  PrintMessage (mymessage, cout);
  // Exit form the program. 
  return 0;
}

/***********************************************************/
/* Function : GetName                                      */
/* Parameters : message string and output stream           */
/* Return value : none (void)                              */
/* Description : This function will write the message      */
/* requesting the user's name to the output stream. It     */
/* will then read the user's name from the input stream    */
/* and store it in a string variable. Finally, it will     */
/* return the string variable containing the name.         */
/***********************************************************/


string GetName (ostream & outs, istream & ins)
{
  // Declare a string variable to hodl the user's name.
  string name;
  // Request the user's name.
  outs  << "Please enter your name: "  << endl;
  // Read the user's name from cin - the standard input - generally
  // the keyboard.
  ins >> name;
 
  
  
  return name;
}



/***********************************************************/
/* Function : PrintMessage                                 */
/* Parameters : message string and output stream           */
/* Return value : none (void)                              */
/* Description : This function will write the message to   */
/* the output stream.                                      */
/***********************************************************/

void PrintMessage (string message, ostream & outs)
{
  // Declare a variable to hold the max angle also max number of lines.
  float maxAngle = 6.28;
  // Declare a variable to count the lines as they print.
  float angle = 0.0;
  // Outer loop
  while (angle < maxAngle )
  {
    // Prints out vertical bar at beginning. 
    outs << "| ";
    // Declare a variable to hold the desired number of spaces.
    int numSpaces = int (20 + 20 * sin (angle));
    // Declare a variable to count the spaces as they are printed.
    int spaceCount =0;

    while (spaceCount < numSpaces)
     {
	// Write a single space to outs.
	outs << ' ';
	// Increment the space counter.
	spaceCount++;
     }
    // Writes message to outs.
    outs << message;
    spaceCount =0;
    numSpaces = 40 - numSpaces;
    while (spaceCount < numSpaces)
      {
	outs << ' ';
	spaceCount++;
      }
    //Print middle bar
    outs << " | ";
    // numSpaces holds the desired number of spaces using COSINE
    numSpaces = int(20 + 20 * cos (angle));
    // reset spaceCount to 0
    spaceCount = 0;
    numSpaces = numSpaces;
    while ( spaceCount < numSpaces)
      {
	outs << ' ';
	spaceCount++;
      }

    // Writes message to outs
    outs << message;
    spaceCount = 0;
    numSpaces = 40 - numSpaces;
    while (spaceCount < numSpaces)
      {
	outs << ' ';
	spaceCount++;
      }
      
    //Write the message to outs followed by a blank line.
    outs << " |" << endl;
    // Increment the angle by .3.
    angle += 0.3;

  }
  
}








